{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classnames","TodoList","todos","map","App","todosWithUser","todosFromServer","usersFromServer","find","useState","setTodos","setTitle","setUser","userName","setUserName","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","validTitle","trim","validUserName","newTodo","Math","max","formSubmit","htmlFor","value","type","placeholder","onChange","target","selectedUserName","newUser","item","disabled","singleUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a93d9f1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    (\n      <article\n        key={id}\n        data-id={id}\n        className={classnames({\n          TodoInfo: true,\n          'TodoInfo--completed': completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    )\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo, User } from './types';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  function getUserById(userId: number): User | undefined {\n    return usersFromServer.find((user) => user.id === userId);\n  }\n\n  const todosWithUser = todosFromServer.map((todo) => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n\n  const [title, setTitle] = useState('');\n\n  const [user, setUser] = useState(usersFromServer[0]);\n  const [userName, setUserName] = useState('0');\n\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const formSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const validTitle = title.trim();\n    const validUserName = userName !== '0';\n\n    if (!validTitle) {\n      setTitleError(true);\n    }\n\n    if (!validUserName) {\n      setUserError(true);\n    }\n\n    if (validTitle && validUserName) {\n      const largestId = Math.max(...todos.map((todo) => todo.id));\n      const newTodoId = largestId + 1;\n\n      const newTodo: Todo = {\n        id: newTodoId,\n        title,\n        completed: false,\n        userId: user.id,\n        user,\n      };\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n      setUserName('0');\n      setUser(usersFromServer[0]);\n      setTitleError(false);\n      setUserError(false);\n    }\n  };\n\n  const titleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const userPick = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedUserName = event.target.value;\n\n    setUserName(selectedUserName);\n    const newUser = usersFromServer\n      .find(item => item.name === selectedUserName);\n\n    if (newUser) {\n      setUser(newUser);\n    }\n\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={event => formSubmit(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"field__title\">\n            Title:\n            <input\n              value={title}\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={titleChange}\n            />\n            {titleError\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"field__title\">\n            User:\n            <select\n              data-cy=\"userSelect\"\n              onChange={userPick}\n              value={userName}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((singleUser) => (\n                <option\n                  key={singleUser.id}\n                  value={singleUser.name}\n                >\n                  {singleUser.name}\n                </option>\n              ))}\n            </select>\n            {userError && <span className=\"error\">Please choose a user</span>}\n          </label>\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}